{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: \"home-page\",\n  data: function data() {\n    return {\n      parameterCode: \"\",\n      parameterCodeRules: [function (v) {\n        return !!v || \"Código do Parâmetro é necessário\";\n      }, function (v) {\n        return v && v.length == 6 || \"Deve conter exatamente 6 digitos\";\n      }],\n      selectAircraft: null,\n      testName: null,\n      testNumber: null,\n      testTime: null,\n      engineer: null,\n      checkbox: false,\n      aircraftCodes: [],\n      parameterCodes: [],\n      testData: [],\n      testDate: new Date().toISOString().slice(0, 10),\n      url: \"http://localhost:8080/\"\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    console.log;\n    axios.get(this.url + \"aircrafts\").then(function (response) {\n      if (response.data != null) {\n        response.data.forEach(function (element) {\n          _this.aircraftCodes.push(element.aircraftCode);\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    getTestNumber: function getTestNumber() {\n      var _this2 = this;\n\n      axios.get(this.url + \"aircrafts/\" + this.selectAircraft + \"/tests\").then(function (response) {\n        if (response.data != null) {\n          response.data.forEach(function (element) {\n            _this2.parameterCodes.push(element.testNumber);\n          });\n        }\n\n        console.log(response.status);\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getTestResult: function getTestResult() {\n      var _this3 = this;\n\n      axios.get(this.url + \"test-data/\" + this.selectAircraft + \"/tests/\" + this.testNumber).then(function (response) {\n        console.log(response.data);\n\n        if (response.data != null) {\n          response.data.forEach(function (element) {\n            var status = 0;\n\n            if (element.status == true) {\n              status = 1;\n            }\n\n            _this3.testData.push(status);\n          });\n        }\n\n        console.log(_this3.testData);\n        console.log(response.status);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AAEA;EACAA,iBADA;EAEAC;IAAA;MACAC,iBADA;MAEAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAFA;MAMAC,oBANA;MAOAC,cAPA;MAQAC,gBARA;MASAC,cATA;MAUAC,cAVA;MAWAC,eAXA;MAYAC,iBAZA;MAaAC,kBAbA;MAcAC,YAdA;MAeAC,+CAfA;MAgBAC;IAhBA;EAAA,CAFA;EAqBAC,OArBA,qBAqBA;IAAA;;IACAC;IACAC,MACAC,GADA,CACA,sBADA,EAEAC,IAFA,CAEA;MACA;QACAC;UACA;QACA,CAFA;MAGA;IACA,CARA,EASAC,KATA,CASA;MACAL;IACA,CAXA;EAYA,CAnCA;EAqCAM;IACAC,aADA,2BACA;MAAA;;MACAN,MACAC,GADA,CACA,wDADA,EAEAC,IAFA,CAEA;QACA;UACAC;YACA;UACA,CAFA;QAGA;;QACAJ;QACAA;MACA,CAVA,EAWAK,KAXA,CAWA;QACAL;MACA,CAbA;IAcA,CAhBA;IAiBAQ,aAjBA,2BAiBA;MAAA;;MACAP,MACAC,GADA,CAEA,2EAFA,EAIAC,IAJA,CAIA;QACAH;;QACA;UACAI;YACA;;YACA;cACAK;YACA;;YACA;UACA,CANA;QAOA;;QACAT;QACAA;MACA,CAjBA,EAkBAK,KAlBA,CAkBA;QACAL;MACA,CApBA;IAqBA;EAvCA;AArCA","names":["name","data","parameterCode","parameterCodeRules","selectAircraft","testName","testNumber","testTime","engineer","checkbox","aircraftCodes","parameterCodes","testData","testDate","url","mounted","console","axios","get","then","response","catch","methods","getTestNumber","getTestResult","status"],"sourceRoot":"src/pages","sources":["TestConsultation.vue"],"sourcesContent":["<template>\n  <v-card class=\"fill-height\" fluid>\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h1\">\n          <v-icon large left> mdi-airplane </v-icon>\n          Aircraft Tester\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h4\">\n          <v-icon large left> mdi-airplane-search </v-icon>\n          Consulta de Ensaios\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-container class=\"text-center\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-container class=\"text-center\">\n          <v-select\n            v-model=\"selectAircraft\"\n            :items=\"aircraftCodes\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Aeronave\"\n            required\n            v-on:change=\"getTestNumber()\"\n          >\n          </v-select>\n\n          <v-select\n            v-model=\"testNumber\"\n            :items=\"parameterCodes\"\n            label=\"Número do Ensaio\"\n            required\n          >\n          </v-select>\n\n          <v-checkbox\n            v-model=\"checkbox\"\n            :rules=\"[(v) => !!v || 'Você deve confimar antes de continuar!']\"\n            label=\"Todos dados estão corretos?\"\n            required\n          ></v-checkbox>\n\n          <v-btn\n            rounded\n            :disabled=\"!checkbox\"\n            color=\"success\"\n            class=\"mr-4\"\n            v-on:click=\"getTestResult()\"\n          >\n            Consultar\n          </v-btn>\n\n          <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n            Limpar Preenchimento\n          </v-btn>\n          <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n            <v-btn rounded color=\"error\" class=\"my-4\">\n              <v-icon>mdi-close</v-icon>\n              Cancelar\n            </v-btn>\n          </router-link>\n          <v-card\n            class=\"mx-auto text-center\"\n            color=\"green\"\n            dark\n            v-if=\"testData.length > 0\"\n          >\n            <v-card-text>\n              <v-sheet color=\"rgba(0, 0, 0, .12)\">\n                <v-sparkline\n                  :value=\"testData\"\n                  color=\"rgba(255, 255, 255, .7)\"\n                  height=\"100\"\n                  padding=\"24\"\n                  line-width=\"0.5\"\n                  stroke-linecap=\"round\"\n                  smooth\n                >\n                </v-sparkline>\n              </v-sheet>\n            </v-card-text>\n\n            <v-card-text>\n              <div class=\"text-h4 font-weight-thin\">0 - Erro | 1 - Sucesso</div>\n            </v-card-text>\n\n            <v-divider></v-divider>\n          </v-card>\n        </v-container>\n      </v-form>\n    </v-container>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"home-page\",\n  data: () => ({\n    parameterCode: \"\",\n    parameterCodeRules: [\n      (v) => !!v || \"Código do Parâmetro é necessário\",\n      (v) => (v && v.length == 6) || \"Deve conter exatamente 6 digitos\",\n    ],\n    selectAircraft: null,\n    testName: null,\n    testNumber: null,\n    testTime: null,\n    engineer: null,\n    checkbox: false,\n    aircraftCodes: [],\n    parameterCodes: [],\n    testData: [],\n    testDate: new Date().toISOString().slice(0, 10),\n    url: \"http://localhost:8080/\",\n  }),\n\n  mounted() {\n    console.log;\n    axios\n      .get(this.url + \"aircrafts\")\n      .then((response) => {\n        if (response.data != null) {\n          response.data.forEach((element) => {\n            this.aircraftCodes.push(element.aircraftCode);\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n\n  methods: {\n    getTestNumber() {\n      axios\n        .get(this.url + \"aircrafts/\" + this.selectAircraft + \"/tests\")\n        .then((response) => {\n          if (response.data != null) {\n            response.data.forEach((element) => {\n              this.parameterCodes.push(element.testNumber);\n            });\n          }\n          console.log(response.status);\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    getTestResult() {\n      axios\n        .get(\n          this.url + \"test-data/\" + this.selectAircraft + \"/tests/\" + this.testNumber\n        )\n        .then((response) => {\n          console.log(response.data);\n          if (response.data != null) {\n            response.data.forEach((element) => {\n              let status = 0\n              if (element.status == true) {\n                  status = 1;\n              }\n              this.testData.push(status);\n            });\n          }\n          console.log(this.testData);\n          console.log(response.status);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}