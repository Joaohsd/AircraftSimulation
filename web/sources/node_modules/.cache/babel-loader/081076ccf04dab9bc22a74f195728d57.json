{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      parameterCode: \"\",\n      parameterCodeRules: [function (v) {\n        return !!v || \"Código do Parâmetro é necessário\";\n      }, function (v) {\n        return v && v.length == 6 || \"Deve conter exatamente 6 digitos\";\n      }],\n      select: {},\n      aircraftCodes: [],\n      checkbox: false\n    };\n  },\n  mounted: function mounted() {\n    this.getAircrafts();\n  },\n  methods: {\n    getAircrafts: function getAircrafts() {\n      var _this = this;\n\n      var url = \"http://localhost:8080/\";\n      axios.get(url + \"aircrafts\").then(function (response) {\n        if (response.data != null) {\n          _this.aircraftCodes = response.data.reduce(function (group, row) {\n            var _group$aicraftCode;\n\n            var aicraftCode = row.aicraftCode;\n            group[aicraftCode] = (_group$aicraftCode = group[aicraftCode]) !== null && _group$aicraftCode !== void 0 ? _group$aicraftCode : [];\n            group[aicraftCode].push(row);\n            return group;\n          }, {});\n        }\n\n        console.log(_this.aircraftCodes);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AAEA;EACAA;IAAA;MACAC,WADA;MAEAC,iBAFA;MAGAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAHA;MAOAC,UAPA;MAQAC,iBARA;MASAC;IATA;EAAA,CADA;EAaAC,OAbA,qBAaA;IACA;EACA,CAfA;EAiBAC;IACAC,YADA,0BACA;MAAA;;MACA;MACAC,MACAC,GADA,CACAC,iBADA,EAEAC,IAFA,CAEA;QACA;UACA;YAAA;;YACA;YACAC;YACAA;YACA;UACA,CALA,EAKA,EALA;QAMA;;QACAC;MACA,CAZA,EAaAC,KAbA,CAaA;QACAD;MACA,CAfA;IAgBA;EAnBA;AAjBA","names":["data","valid","parameterCode","parameterCodeRules","select","aircraftCodes","checkbox","mounted","methods","getAircrafts","axios","get","url","then","group","console","catch"],"sourceRoot":"src/pages","sources":["ParameterRegister.vue"],"sourcesContent":["<template>\n  <v-card class=\"fill-height\" fluid>\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h1\">\n          <v-icon large left> mdi-airplane </v-icon>\n          Aircraft Tester\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h4\">\n          <v-icon large left> mdi-airplane-plus </v-icon>\n          Cadastro de Parâmetros\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-container class=\"text-center\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-container class=\"text-center\">\n          <v-switch\n            label=\"Parâmetro Ativo\"\n            color=\"info\"\n            value=\"info\"\n            hide-details\n          >\n          </v-switch>\n          <v-select\n            v-model=\"select\"\n            :items=\"aircraftCodes\"\n            item-text=\"name\"\n            item-value=\"name\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Aeronave\"\n            required\n          >\n          </v-select>\n\n          <v-text-field v-model=\"name\" label=\"Nome do Parâmetro\" required>\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"parameterCode\"\n            :rules=\"parameterCodeRules\"\n            :counter=\"6\"\n            label=\"Código do Parâmetro\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field label=\"Tipo\" required> </v-text-field>\n\n          <v-text-field v-model=\"name\" label=\"Sampling Rate\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"name\" label=\"Valor Mínimo Permitido\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"name\" label=\"Valor Máximo Permitido\" required>\n          </v-text-field>\n\n          <v-checkbox\n            v-model=\"checkbox\"\n            :rules=\"[(v) => !!v || 'Você deve confimar antes de continuar!']\"\n            label=\"Todos dados estão corretos?\"\n            required\n          ></v-checkbox>\n\n          <v-btn\n            rounded\n            :disabled=\"!valid\"\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"validate\"\n          >\n            Cadastrar\n          </v-btn>\n\n          <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n            Limpar Preenchimento\n          </v-btn>\n          <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n            <v-btn rounded color=\"error\" class=\"my-4\">\n              <v-icon>mdi-close</v-icon>\n              Cancelar\n            </v-btn>\n          </router-link>\n        </v-container>\n      </v-form>\n    </v-container>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    valid: true,\n    parameterCode: \"\",\n    parameterCodeRules: [\n      (v) => !!v || \"Código do Parâmetro é necessário\",\n      (v) => (v && v.length == 6) || \"Deve conter exatamente 6 digitos\",\n    ],\n    select: {},\n    aircraftCodes: [],\n    checkbox: false,\n  }),\n\n  mounted() {\n    this.getAircrafts();\n  },\n\n  methods: {\n    getAircrafts() {\n      const url = \"http://localhost:8080/\";\n      axios\n        .get(url + \"aircrafts\")\n        .then((response) => {\n          if (response.data != null) {\n            this.aircraftCodes = response.data.reduce((group, row) => {\n              const { aicraftCode } = row;\n              group[aicraftCode] = group[aicraftCode] ?? [];\n              group[aicraftCode].push(row);\n              return group;\n            }, {});\n          }\n          console.log(this.aircraftCodes);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}