{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      parameterCode: \"\",\n      parameterCodeRules: [function (v) {\n        return !!v || \"Código do Parâmetro é necessário\";\n      }, function (v) {\n        return v && v.length == 6 || \"Deve conter exatamente 6 digitos\";\n      }],\n      types: [\"Temperatura\", \"Pressão\"],\n      activeStatus: false,\n      selectAircraft: null,\n      selectType: null,\n      parameterName: null,\n      samplingRate: null,\n      minValue: null,\n      maxValue: null,\n      aircraftCodes: [],\n      checkbox: false,\n      url: \"http://localhost:8080/\"\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(this.url + \"aircrafts\").then(function (response) {\n      if (response.data != null) {\n        response.data.forEach(function (element) {\n          _this.aircraftCodes.push(element.aircraftCode);\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    registerParameter: function registerParameter() {\n      axios.post(this.url + \"parameters\", {\n        \"code\": this.parameterCode,\n        \"name\": this.parameterName,\n        \"type\": this.selectType,\n        \"samplingRate\": this.samplingRate,\n        \"minValue\": this.minValue,\n        \"maxValue\": this.maxValue,\n        \"activeStatus\": this.activeStatus,\n        \"aircraftCode\": this.selectAircraft\n      }).then(function (response) {\n        console.log(response.status);\n        console.log(response.data);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AAEA;EACAA;IAAA;MACAC,iBADA;MAEAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAFA;MAMAC,iCANA;MAOAC,mBAPA;MAQAC,oBARA;MASAC,gBATA;MAUAC,mBAVA;MAWAC,kBAXA;MAYAC,cAZA;MAaAC,cAbA;MAcAC,iBAdA;MAeAC,eAfA;MAgBAC;IAhBA;EAAA,CADA;EAoBAC,OApBA,qBAoBA;IAAA;;IACAC,MACAC,GADA,CACA,sBADA,EAEAC,IAFA,CAEA;MACA;QACAC;UACA;QACA,CAFA;MAGA;IACA,CARA,EASAC,KATA,CASA;MACAC;IACA,CAXA;EAYA,CAjCA;EAmCAC;IACAC,iBADA,+BACA;MACAP;QACA,0BADA;QAEA,0BAFA;QAGA,uBAHA;QAIA,iCAJA;QAKA,yBALA;QAMA,yBANA;QAOA,iCAPA;QAQA;MARA,GASAE,IATA,CASA;QACAG;QACAA;MACA,CAZA;IAaA;EAfA;AAnCA","names":["data","parameterCode","parameterCodeRules","types","activeStatus","selectAircraft","selectType","parameterName","samplingRate","minValue","maxValue","aircraftCodes","checkbox","url","mounted","axios","get","then","response","catch","console","methods","registerParameter"],"sourceRoot":"src/pages","sources":["ParameterRegister.vue"],"sourcesContent":["<template>\n  <v-card class=\"fill-height\" fluid>\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h1\">\n          <v-icon large left> mdi-airplane </v-icon>\n          Aircraft Tester\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h4\">\n          <v-icon large left> mdi-airplane-plus </v-icon>\n          Cadastro de Parâmetros\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-container class=\"text-center\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-container class=\"text-center\">\n          <v-switch\n            v-model=\"activeStatus\"\n            label=\"Parâmetro Ativo\"\n            color=\"info\"\n            value=\"true\"\n            hide-details\n          >\n          </v-switch>\n\n            <v-select\n              v-model=\"selectAircraft\"\n              :items=\"aircraftCodes\"\n              :rules=\"[(v) => !!v || 'Item is required']\"\n              label=\"Aeronave\"\n              required\n            >\n            </v-select>\n\n          <v-text-field v-model=\"parameterName\" label=\"Nome do Parâmetro\" required>\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"parameterCode\"\n            :rules=\"parameterCodeRules\"\n            :counter=\"6\"\n            label=\"Código do Parâmetro\"\n            required\n          >\n          </v-text-field>\n\n            <v-select\n              v-model=\"selectType\"\n              :items=\"types\"\n              :rules=\"[(v) => !!v || 'Item is required']\"\n              label=\"Tipo\"\n              required\n              ></v-select>\n\n          <v-text-field v-model=\"samplinRate\" label=\"Sampling Rate\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"minValue\" label=\"Valor Mínimo Permitido\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"maxValue\" label=\"Valor Máximo Permitido\" required>\n          </v-text-field>\n\n          <v-checkbox\n            v-model=\"checkbox\"\n            :rules=\"[(v) => !!v || 'Você deve confimar antes de continuar!']\"\n            label=\"Todos dados estão corretos?\"\n            required\n          ></v-checkbox>\n\n          <v-btn\n            rounded\n            :disabled=\"!checkbox\"\n            color=\"success\"\n            class=\"mr-4\"\n            v-on:click=\"registerParameter()\"\n          >\n            Cadastrar\n          </v-btn>\n\n          <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n            Limpar Preenchimento\n          </v-btn>\n          <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n            <v-btn rounded color=\"error\" class=\"my-4\">\n              <v-icon>mdi-close</v-icon>\n              Cancelar\n            </v-btn>\n          </router-link>\n        </v-container>\n      </v-form>\n    </v-container>\n  </v-card>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    parameterCode: \"\",\n    parameterCodeRules: [\n      (v) => !!v || \"Código do Parâmetro é necessário\",\n      (v) => (v && v.length == 6) || \"Deve conter exatamente 6 digitos\",\n    ],\n    types: [\"Temperatura\", \"Pressão\"],\n    activeStatus: false,\n    selectAircraft: null,\n    selectType: null,\n    parameterName: null,\n    samplingRate: null,\n    minValue: null,\n    maxValue: null,\n    aircraftCodes: [],\n    checkbox: false,\n    url: \"http://localhost:8080/\",\n  }),\n\n  mounted() {\n    axios\n      .get(this.url + \"aircrafts\")\n      .then((response) => {\n        if (response.data != null) {\n          response.data.forEach((element) => {\n            this.aircraftCodes.push(element.aircraftCode);\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n\n  methods: {\n      registerParameter() {\n          axios.post(this.url + \"parameters\",{\n              \"code\":this.parameterCode,\n              \"name\":this.parameterName,\n              \"type\":this.selectType,\n              \"samplingRate\":this.samplingRate,\n              \"minValue\":this.minValue,\n              \"maxValue\":this.maxValue,\n              \"activeStatus\":this.activeStatus,\n              \"aircraftCode\":this.selectAircraft,\n          }).then((response) => {\n              console.log(response.status)\n              console.log(response.data)\n          })\n      }\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}