{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      parameterCode: '',\n      parameterCodeRules: [function (v) {\n        return !!v || 'Código do Parâmetro é necessário';\n      }, function (v) {\n        return v && v.length == 6 || 'Deve conter exatamente 6 digitos';\n      }],\n      types: ['Temperatura', 'Pressão'],\n      select: null,\n      aircraftCodes: [],\n      aircraftParameters: [],\n      checkbox: false\n    };\n  },\n  methods: {\n    getAircrafts: function getAircrafts() {\n      var _this = this;\n\n      var url = 'http://localhost:8080/';\n      axios.get(url + \"aircrafts/\").then(function (response) {\n        if (response.data != null) {\n          response.data.forEach(function (element) {\n            _this.aircraftCodes.push(element.aircraftCode);\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getParameters: function getParameters() {\n      var _this2 = this;\n\n      var url = 'http://localhost:8080/';\n      console.log(this.select);\n      axios.get(url + \"aircrafts/\" + this.select + \"/parameters\").then(function (response) {\n        if (response.data != null) {\n          console.log(response);\n          response.data.forEach(function (element) {\n            _this2.aircraftParameters.push(element);\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AAEA;EACAA;IAAA;MACAC,WADA;MAEAC,iBAFA;MAGAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAHA;MAOAC,iCAPA;MAQAC,YARA;MASAC,iBATA;MAUAC,sBAVA;MAWAC;IAXA;EAAA,CADA;EAeAC;IAEAC,YAFA,0BAEA;MAAA;;MACA;MACAC,MACAC,GADA,CACAC,kBADA,EACAC,IADA,CACA;QACA;UACAC;YACA;UACA,CAFA;QAGA;MACA,CAPA,EAQAC,KARA,CAQA;QACAC;MACA,CAVA;IAWA,CAfA;IAgBAC,aAhBA,2BAgBA;MAAA;;MACA;MACAD;MACAN,MACAC,GADA,CACAC,gDADA,EACAC,IADA,CACA;QACA;UACAG;UACAF;YACA;UACA,CAFA;QAGA;MACA,CARA,EASAC,KATA,CASA;QACAC;MACA,CAXA;IAYA;EA/BA;AAfA","names":["data","valid","parameterCode","parameterCodeRules","types","select","aircraftCodes","aircraftParameters","checkbox","methods","getAircrafts","axios","get","url","then","response","catch","console","getParameters"],"sourceRoot":"src/pages","sources":["ParameterRegister.vue"],"sourcesContent":["<template>\n  <v-card class=\"fill-height\" fluid>\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h1\">\n          <v-icon large left> mdi-airplane </v-icon>\n          Aircraft Tester\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h4\">\n          <v-icon large left> mdi-airplane-plus </v-icon>\n          Cadastro de Parâmetros\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-container class=\"text-center\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-container class=\"text-center\">\n          <v-switch\n            label=\"Parâmetro Ativo\"\n            color=\"info\"\n            value=\"info\"\n            hide-details\n          >\n          </v-switch>\n\n          <v-select\n            v-model=\"select\"\n            :items=\"aircraftCodes\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Aeronave\"\n            required\n          >\n          </v-select>\n\n          <v-text-field v-model=\"name\" label=\"Nome do Parâmetro\" required>\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"parameterCode\"\n            :rules=\"parameterCodeRules\"\n            :counter=\"6\"\n            label=\"Código do Parâmetro\"\n            required\n          >\n          </v-text-field>\n\n          <v-select\n            v-model=\"select\"\n            :items=\"types\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Tipo\"\n            required\n            v-on:change = \"getParameters()\"\n          >\n          </v-select>\n\n\n          <v-text-field v-model=\"name\" label=\"Sampling Rate\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"name\" label=\"Valor Mínimo Permitido\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"name\" label=\"Valor Máximo Permitido\" required>\n          </v-text-field>\n\n          <v-checkbox\n            v-model=\"checkbox\"\n            :rules=\"[(v) => !!v || 'Você deve confimar antes de continuar!']\"\n            label=\"Todos dados estão corretos?\"\n            required\n          ></v-checkbox>\n\n          <v-btn\n            rounded\n            :disabled=\"!valid\"\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"validate\"\n          >\n            Cadastrar\n          </v-btn>\n\n          <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n            Limpar Preenchimento\n          </v-btn>\n          <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n            <v-btn rounded color=\"error\" class=\"my-4\">\n              <v-icon>mdi-close</v-icon>\n              Cancelar\n            </v-btn>\n          </router-link>\n        </v-container>\n      </v-form>\n    </v-container>\n  </v-card>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n    data: () => ({\n        valid: true,\n        parameterCode: '',\n        parameterCodeRules: [\n            v => !!v || 'Código do Parâmetro é necessário',\n            v => (v && v.length == 6) || 'Deve conter exatamente 6 digitos',\n        ],\n        types: ['Temperatura', 'Pressão'],\n        select: null,\n        aircraftCodes: [],\n        aircraftParameters: [],\n        checkbox: false,\n    }),\n\n    methods: {\n\n    getAircrafts() {\n        const url = 'http://localhost:8080/';\n        axios\n        .get(url + \"aircrafts/\").then((response) => {\n          if (response.data != null) {\n              response.data.forEach(element => {\n                  this.aircraftCodes.push(element.aircraftCode) \n              });\n          }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    },\n    getParameters() {\n        const url = 'http://localhost:8080/';\n        console.log(this.select)\n        axios\n        .get(url + \"aircrafts/\" + this.select + \"/parameters\").then((response) => {\n          if (response.data != null) {\n              console.log(response)\n              response.data.forEach(element => {\n                  this.aircraftParameters.push(element) \n              });\n          }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n    \n    \n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}