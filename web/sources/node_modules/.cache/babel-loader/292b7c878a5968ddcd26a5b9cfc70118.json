{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      valid: true,\n      parameterCode: '',\n      parameterCodeRules: [function (v) {\n        return !!v || 'Código do Parâmetro é necessário';\n      }, function (v) {\n        return v && v.length == 6 || 'Deve conter exatamente 6 digitos';\n      }],\n      select: null,\n      items: ['PP-XZE'],\n      checkbox: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(\"https://app-challenge-api.herokuapp.com/plans\").then(function (response) {\n      if (response.data != null) _this.apiInformation = response.data.reduce(function (group, row) {\n        var _group$isp;\n\n        var isp = row.isp;\n        group[isp] = (_group$isp = group[isp]) !== null && _group$isp !== void 0 ? _group$isp : [];\n        group[isp].push(row);\n        return group;\n      }, {}); // response.data.forEach((row) => {\n      //   if (!this.apiInformation[row.isp])\n      //     this.apiInformation[row.isp] = []\n      //     this.apiInformation[row.isp].push(row)\n      //})\n\n      console.log(_this.apiInformation); //this.apiInformation = response.data\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    validate: function validate() {\n      this.$refs.form.validate();\n    },\n    reset: function reset() {\n      this.$refs.form.reset();\n    },\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;EACAA;IAAA;MACAC,WADA;MAEAC,iBAFA;MAGAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAHA;MAOAC,YAPA;MAQAC,iBARA;MASAC;IATA;EAAA,CADA;EAaAC,OAbA,qBAaA;IAAA;;IACAC,MACAC,GADA,CACA,+CADA,EAEAC,IAFA,CAEA;MACA,2BACA;QAAA;;QACA;QACAC;QACAA;QACA;MACA,CALA,EAKA,EALA,EAFA,CASA;MACA;MACA;MACA;MACA;;MACAC,kCAdA,CAeA;IACA,CAlBA,EAmBAC,KAnBA,CAmBA;MACAD;IACA,CArBA;EAsBA,CApCA;EAsCAE;IACAC,QADA,sBACA;MACA;IACA,CAHA;IAIAC,KAJA,mBAIA;MACA;IACA,CANA;IAOAC,eAPA,6BAOA;MACA;IACA;EATA;AAtCA","names":["data","valid","parameterCode","parameterCodeRules","select","items","checkbox","mounted","axios","get","then","group","console","catch","methods","validate","reset","resetValidation"],"sourceRoot":"src/pages","sources":["ParameterRegister.vue"],"sourcesContent":["<template>\n    <v-card class=\"fill-height\" fluid>\n        <v-banner app color=\"green\" dark>\n            <div class=\"d-flex align-center\">\n                <v-title class=\"text-h1\">\n                    <v-icon large left>\n                        mdi-airplane\n                    </v-icon>\n                    Aircraft Tester\n                </v-title>\n            </div>\n        </v-banner>\n\n        <v-banner app color=\"green\" dark>\n            <div class=\"d-flex align-center\">\n                <v-title class=\"text-h4\">\n                    <v-icon large left>\n                        mdi-airplane-plus\n                    </v-icon>\n                    Cadastro de Parâmetros\n                </v-title>\n            </div>\n        </v-banner>\n\n        <v-container class=\"text-center\">\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <v-container class=\"text-center\">\n                    <v-switch label=\"Parâmetro Ativo\" color=\"info\" value=\"info\" hide-details>\n                    </v-switch>\n\n                    <v-select v-model=\"select\" :items=\"items\" :rules=\"[v => !!v || 'Item is required']\" label=\"Aeronave\"\n                        required>\n                    </v-select>\n\n                    <v-text-field v-model=\"name\" label=\"Nome do Parâmetro\" required>\n                    </v-text-field>\n\n                    <v-text-field v-model=\"parameterCode\" :rules=\"parameterCodeRules\" :counter=\"6\"\n                        label=\"Código do Parâmetro\" required>\n                    </v-text-field>\n\n                    <v-text-field label=\"Tipo\" required>\n                    </v-text-field>\n\n                    <v-text-field v-model=\"name\" label=\"Sampling Rate\" required>\n                    </v-text-field>\n\n                    <v-text-field v-model=\"name\" label=\"Valor Mínimo Permitido\" required>\n                    </v-text-field>\n\n                    <v-text-field v-model=\"name\" label=\"Valor Máximo Permitido\" required>\n                    </v-text-field>\n\n                    <v-checkbox v-model=\"checkbox\" :rules=\"[v => !!v || 'Você deve confimar antes de continuar!']\"\n                        label=\"Todos dados estão corretos?\" required></v-checkbox>\n\n                    <v-btn rounded :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"validate\">\n                        Cadastrar\n                    </v-btn>\n\n                    <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n                        Limpar Preenchimento\n                    </v-btn>\n                    <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n                        <v-btn rounded color=\"error\" class=\"my-4\">\n                            <v-icon>mdi-close</v-icon>\n                            Cancelar\n                        </v-btn>\n                    </router-link>\n                </v-container>\n            </v-form>\n        </v-container>\n    </v-card>\n</template>\n\n<script>\nexport default {\n    data: () => ({\n        valid: true,\n        parameterCode: '',\n        parameterCodeRules: [\n            v => !!v || 'Código do Parâmetro é necessário',\n            v => (v && v.length == 6) || 'Deve conter exatamente 6 digitos',\n        ],\n        select: null,\n        items: ['PP-XZE'],\n        checkbox: false,\n    }),\n\n    mounted() {\n    axios\n      .get(\"https://app-challenge-api.herokuapp.com/plans\")\n      .then((response) => {\n        if (response.data != null)\n          this.apiInformation = response.data.reduce((group, row) => {\n            const { isp } = row;\n            group[isp] = group[isp] ?? [];\n            group[isp].push(row);\n            return group;\n          }, {});\n\n        // response.data.forEach((row) => {\n        //   if (!this.apiInformation[row.isp])\n        //     this.apiInformation[row.isp] = []\n        //     this.apiInformation[row.isp].push(row)\n        //})\n        console.log(this.apiInformation);\n        //this.apiInformation = response.data\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n\n    methods: {\n        validate() {\n            this.$refs.form.validate()\n        },\n        reset() {\n            this.$refs.form.reset()\n        },\n        resetValidation() {\n            this.$refs.form.resetValidation()\n        },\n    },\n}\n</script>"]},"metadata":{},"sourceType":"module"}