{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: \"home-page\",\n  data: function data() {\n    return {\n      parameterCode: \"\",\n      parameterCodeRules: [function (v) {\n        return !!v || \"Código do Parâmetro é necessário\";\n      }, function (v) {\n        return v && v.length == 6 || \"Deve conter exatamente 6 digitos\";\n      }],\n      selectAircraft: null,\n      testName: null,\n      testNumber: null,\n      testTime: null,\n      engineer: null,\n      checkbox: false,\n      progressBar: false,\n      dialog: false,\n      textDialog: \"Deseja salvar os dados do ensaio no banco de dados?\",\n      flagDialog: false,\n      flagButtonDialog: false,\n      aircraftCodes: [],\n      engineerName: [],\n      cpfEngineer: \"\",\n      engineers: [{}],\n      testDate: new Date().toISOString().slice(0, 10),\n      url: \"http://localhost:8080/\"\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(this.url + \"aircrafts\").then(function (response) {\n      if (response.data != null) {\n        response.data.forEach(function (element) {\n          _this.aircraftCodes.push(element.aircraftCode);\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(this.url + \"engineers\").then(function (response) {\n      if (response.data != null) {\n        response.data.forEach(function (element) {\n          _this.engineerName.push(element.name);\n\n          _this.engineers.push(element);\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    setEngineerCPF: function setEngineerCPF() {\n      var _this2 = this;\n\n      this.engineers.forEach(function (element) {\n        if (element.name == _this2.engineer) {\n          _this2.cpfEngineer = element.cpf;\n        }\n      });\n    },\n    getTestNumber: function getTestNumber() {\n      var _this3 = this;\n\n      axios.get(this.url + \"aircrafts/\" + this.selectAircraft + \"/tests\").then(function (response) {\n        if (response.data != null) {\n          response.data.forEach(function (element) {\n            if (_this3.testNumber < element.testNumber) {\n              _this3.testNumber = element.testNumber;\n            }\n          });\n        }\n\n        _this3.testNumber += 1;\n        console.log(response.status);\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendTestInfo: function sendTestInfo() {\n      var _this4 = this;\n\n      this.progressBar = true;\n      axios.post(this.url + \"tests\", {\n        aircraftCode: this.selectAircraft,\n        testNumber: this.testNumber,\n        testName: this.testName,\n        cpfEngineer: this.cpfEngineer,\n        time: this.testTime,\n        testDate: this.testDate\n      }).then(function (response) {\n        console.log(response.status);\n        console.log(response.data);\n\n        if (response.status == 200) {\n          _this4.dialog = true;\n          _this4.progressBar = false;\n        }\n      });\n    },\n    saveOnDB: function saveOnDB() {\n      var _this5 = this;\n\n      if (!this.flagDialog) {\n        this.flagButtonDialog = true;\n        this.textDialog = \"Salvando no Banco de Dados. Aguarde...\";\n        axios.post(this.url + \"test-data/save\").then(function (response) {\n          if (response.status == 200) {\n            _this5.textDialog = \"Deseja ver os resultados do ensaio?\";\n            _this5.flagDialog = true;\n            _this5.flagButtonDialog = false;\n          }\n        });\n      } else {\n        this.flagDialog = false;\n        this.$router.push(\"/TestConsultation\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AAEA;EACAA,iBADA;EAEAC;IAAA;MACAC,iBADA;MAEAC,qBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA,CAFA;MAMAC,oBANA;MAOAC,cAPA;MAQAC,gBARA;MASAC,cATA;MAUAC,cAVA;MAWAC,eAXA;MAYAC,kBAZA;MAaAC,aAbA;MAcAC,iEAdA;MAeAC,iBAfA;MAgBAC,uBAhBA;MAiBAC,iBAjBA;MAkBAC,gBAlBA;MAmBAC,eAnBA;MAoBAC,eApBA;MAqBAC,+CArBA;MAsBAC;IAtBA;EAAA,CAFA;EA2BAC,OA3BA,qBA2BA;IAAA;;IACAC,MACAC,GADA,CACA,sBADA,EAEAC,IAFA,CAEA;MACA;QACAC;UACA;QACA,CAFA;MAGA;IACA,CARA,EASAC,KATA,CASA;MACAC;IACA,CAXA;IAYAL,MACAC,GADA,CACA,sBADA,EAEAC,IAFA,CAEA;MACA;QACAC;UACA;;UACA;QACA,CAHA;MAIA;IACA,CATA,EAUAC,KAVA,CAUA;MACAC;IACA,CAZA;EAaA,CArDA;EAuDAC;IACAC,cADA,4BACA;MAAA;;MACA;QACA;UACA;QACA;MACA,CAJA;IAKA,CAPA;IASAC,aATA,2BASA;MAAA;;MACAR,MACAC,GADA,CACA,wDADA,EAEAC,IAFA,CAEA;QACA;UACAC;YACA;cACA;YACA;UACA,CAJA;QAKA;;QACA;QACAE;QACAA;MACA,CAbA,EAcAD,KAdA,CAcA;QACAC;MACA,CAhBA;IAiBA,CA3BA;IA6BAI,YA7BA,0BA6BA;MAAA;;MACA;MACAT,MACAU,IADA,CACA,kBADA,EACA;QACAC,iCADA;QAEA3B,2BAFA;QAGAD,uBAHA;QAIAY,6BAJA;QAKAiB,mBALA;QAMAf;MANA,CADA,EASAK,IATA,CASA;QACAG;QACAA;;QAEA;UACA;UACA;QACA;MACA,CAjBA;IAkBA,CAjDA;IAmDAQ,QAnDA,sBAmDA;MAAA;;MACA;QACA;QACA;QACAb;UACA;YACA;YACA;YACA;UACA;QACA,CANA;MAOA,CAVA,MAUA;QACA;QACA;MACA;IACA;EAlEA;AAvDA","names":["name","data","parameterCode","parameterCodeRules","selectAircraft","testName","testNumber","testTime","engineer","checkbox","progressBar","dialog","textDialog","flagDialog","flagButtonDialog","aircraftCodes","engineerName","cpfEngineer","engineers","testDate","url","mounted","axios","get","then","response","catch","console","methods","setEngineerCPF","getTestNumber","sendTestInfo","post","aircraftCode","time","saveOnDB"],"sourceRoot":"src/pages","sources":["Test.vue"],"sourcesContent":["<template>\n  <v-card class=\"fill-height\" fluid>\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h1\">\n          <v-icon large left> mdi-airplane </v-icon>\n          Aircraft Tester\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-banner app color=\"green\" dark>\n      <div class=\"d-flex align-center\">\n        <v-title class=\"text-h4\">\n          <v-icon large left> mdi-airplane-cog </v-icon>\n          Teste\n        </v-title>\n      </div>\n    </v-banner>\n\n    <v-container class=\"text-center\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-container class=\"text-center\">\n          <v-select\n            v-model=\"selectAircraft\"\n            :items=\"aircraftCodes\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Aeronave\"\n            required\n            v-on:change=\"getTestNumber()\"\n          >\n          </v-select>\n\n          <v-col cols=\"3\">\n            <v-text-field\n              v-model=\"testNumber\"\n              type=\"number\"\n              label=\"Número do Ensaio\"\n              filled\n              readonly\n            ></v-text-field>\n          </v-col>\n\n          <v-text-field v-model=\"testName\" label=\"Nome do Ensaio\" required>\n          </v-text-field>\n\n          <v-text-field v-model=\"testTime\" label=\"Tempo de Ensaio\" required>\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"testDate\"\n            type=\"date\"\n            label=\"Data do Ensaio\"\n            filled\n            readonly\n          ></v-text-field>\n\n          <v-select\n            v-model=\"engineer\"\n            :items=\"engineerName\"\n            :rules=\"[(v) => !!v || 'Item is required']\"\n            label=\"Engenheiro Resposável\"\n            required\n            v-on:change=\"setEngineerCPF()\"\n          >\n          </v-select>\n\n          <v-checkbox\n            v-model=\"checkbox\"\n            :rules=\"[(v) => !!v || 'Você deve confimar antes de continuar!']\"\n            label=\"Todos dados estão corretos?\"\n            required\n          ></v-checkbox>\n\n          <v-btn\n            rounded\n            :disabled=\"!checkbox\"\n            color=\"success\"\n            class=\"mr-4\"\n            v-on:click=\"sendTestInfo()\"\n          >\n            Realizar Ensaio\n          </v-btn>\n\n          <v-btn rounded color=\"error\" class=\"mr-4\" @click=\"reset\">\n            Limpar Preenchimento\n          </v-btn>\n          <router-link :to=\"{ path: '/' }\" tag=\"v-btn\">\n            <v-btn rounded color=\"error\" class=\"my-4\">\n              <v-icon>mdi-close</v-icon>\n              Cancelar\n            </v-btn>\n          </router-link>\n\n          <div style=\"min-height: 4px\">\n            <v-progress-linear\n              v-model=\"value\"\n              :active=\"progressBar\"\n              indeterminate\n            ></v-progress-linear>\n          </div>\n\n          <div class=\"text-center\">\n            <v-dialog v-model=\"dialog\" width=\"500\">\n              <v-card>\n                <v-card-title class=\"text-h5 grey lighten-2\">\n                  Teste Concluido\n                </v-card-title>\n\n                <v-card-text> {{ textDialog }} </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"primary\"\n                    :disabled=\"flagButtonDialog\"\n                    text\n                    @click=\"saveOnDB\"\n                  >\n                    Sim\n                  </v-btn>\n                  <v-btn\n                    color=\"danger\"\n                    :disabled=\"flagButtonDialog\"\n                    text\n                    @click=\"dialog = false\"\n                  >\n                    Não\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n        </v-container>\n      </v-form>\n    </v-container>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"home-page\",\n  data: () => ({\n    parameterCode: \"\",\n    parameterCodeRules: [\n      (v) => !!v || \"Código do Parâmetro é necessário\",\n      (v) => (v && v.length == 6) || \"Deve conter exatamente 6 digitos\",\n    ],\n    selectAircraft: null,\n    testName: null,\n    testNumber: null,\n    testTime: null,\n    engineer: null,\n    checkbox: false,\n    progressBar: false,\n    dialog: false,\n    textDialog: \"Deseja salvar os dados do ensaio no banco de dados?\",\n    flagDialog: false,\n    flagButtonDialog: false,\n    aircraftCodes: [],\n    engineerName: [],\n    cpfEngineer: \"\",\n    engineers: [{}],\n    testDate: new Date().toISOString().slice(0, 10),\n    url: \"http://localhost:8080/\",\n  }),\n\n  mounted() {\n    axios\n      .get(this.url + \"aircrafts\")\n      .then((response) => {\n        if (response.data != null) {\n          response.data.forEach((element) => {\n            this.aircraftCodes.push(element.aircraftCode);\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    axios\n      .get(this.url + \"engineers\")\n      .then((response) => {\n        if (response.data != null) {\n          response.data.forEach((element) => {\n            this.engineerName.push(element.name);\n            this.engineers.push(element);\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  },\n\n  methods: {\n    setEngineerCPF() {\n      this.engineers.forEach((element) => {\n        if (element.name == this.engineer) {\n          this.cpfEngineer = element.cpf;\n        }\n      });\n    },\n\n    getTestNumber() {\n      axios\n        .get(this.url + \"aircrafts/\" + this.selectAircraft + \"/tests\")\n        .then((response) => {\n          if (response.data != null) {\n            response.data.forEach((element) => {\n              if (this.testNumber < element.testNumber) {\n                this.testNumber = element.testNumber;\n              }\n            });\n          }\n          this.testNumber += 1;\n          console.log(response.status);\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n\n    sendTestInfo() {\n      this.progressBar = true;\n      axios\n        .post(this.url + \"tests\", {\n          aircraftCode: this.selectAircraft,\n          testNumber: this.testNumber,\n          testName: this.testName,\n          cpfEngineer: this.cpfEngineer,\n          time: this.testTime,\n          testDate: this.testDate,\n        })\n        .then((response) => {\n          console.log(response.status);\n          console.log(response.data);\n\n          if (response.status == 200) {\n            this.dialog = true;\n            this.progressBar = false;\n          }\n        });\n    },\n\n    saveOnDB() {\n      if (!this.flagDialog) {\n        this.flagButtonDialog = true;\n        this.textDialog = \"Salvando no Banco de Dados. Aguarde...\";\n        axios.post(this.url + \"test-data/save\").then((response) => {\n          if (response.status == 200) {\n            this.textDialog = \"Deseja ver os resultados do ensaio?\";\n            this.flagDialog = true;\n            this.flagButtonDialog = false;\n          }\n        });\n      } else {\n        this.flagDialog = false;\n        this.$router.push(\"/TestConsultation\");\n      }\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}